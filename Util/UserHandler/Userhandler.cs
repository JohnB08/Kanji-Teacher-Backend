using Kanji_teacher_backend.dbContext;
using Kanji_teacher_backend.models;

namespace Kanji_teacher_backend.Util;

public class UserHandler
{
    /// <summary>
    /// Create a new user in the database based on the uid. 
    /// Also creates a relation between the user and all valid characters. 
    /// </summary>
    /// <param name="uid">the uid generated by firebase</param>
    /// <param name="context">the database context</param>
    /// <returns>user object</returns>
    private static UserTable CreateUser(string uid, KTContext context)
    {
        UserTable user = new()
        {
            Uid = uid,
            MaxGrade = 1
        };
        context.Users.Add(user);
        RelationHandler.CreateRelation(user, context);
        context.SaveChanges();
        return user;
    }
    /// <summary>
    /// Gets the user with input uid. If no user is found it creates a new user. 
    /// </summary>
    /// <param name="uid">the uid generated by firebase</param>
    /// <param name="context">the database context</param>
    /// <returns>user object</returns>
    public static UserTable GetUser(string uid, KTContext context)
    {
        var existingUser = context.Users.FirstOrDefault(e => e.Uid == uid) ?? CreateUser(uid, context);
        return existingUser;
    }
}